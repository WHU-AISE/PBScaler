apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-user-mongo
spec:
  selector:
    matchLabels:
      app: ts-user-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-user-mongo
    spec:
      containers:
      - name: ts-user-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-auth-mongo
spec:
  selector:
    matchLabels:
      app: ts-auth-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-auth-mongo
    spec:
      containers:
      - name: ts-auth-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-route-mongo
spec:
  selector:
    matchLabels:
      app: ts-route-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-route-mongo
    spec:
      containers:
      - name: ts-route-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-contacts-mongo
spec:
  selector:
    matchLabels:
      app: ts-contacts-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-contacts-mongo
    spec:
      containers:
      - name: ts-contacts-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-mongo
spec:
  selector:
    matchLabels:
      app: ts-order-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-mongo
    spec:
      containers:
      - name: ts-order-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-other-mongo
spec:
  selector:
    matchLabels:
      app: ts-order-other-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-other-mongo
    spec:
      containers:
      - name: ts-order-other-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-config-mongo
spec:
  selector:
    matchLabels:
      app: ts-config-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-config-mongo
    spec:
      containers:
      - name: ts-config-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-station-mongo
spec:
  selector:
    matchLabels:
      app: ts-station-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-mongo
    spec:
      containers:
      - name: ts-station-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-train-mongo
spec:
  selector:
    matchLabels:
      app: ts-train-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-mongo
    spec:
      containers:
      - name: ts-train-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel-mongo
    spec:
      containers:
      - name: ts-travel-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel2-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel2-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel2-mongo
    spec:
      containers:
      - name: ts-travel2-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-price-mongo
spec:
  selector:
    matchLabels:
      app: ts-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-price-mongo
    spec:
      containers:
      - name: ts-price-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-security-mongo
spec:
  selector:
    matchLabels:
      app: ts-security-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-security-mongo
    spec:
      containers:
      - name: ts-security-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-inside-payment-mongo
spec:
  selector:
    matchLabels:
      app: ts-inside-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-inside-payment-mongo
    spec:
      containers:
      - name: ts-inside-payment-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-payment-mongo
spec:
  selector:
    matchLabels:
      app: ts-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-payment-mongo
    spec:
      containers:
      - name: ts-payment-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-assurance-mongo
spec:
  selector:
    matchLabels:
      app: ts-assurance-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-assurance-mongo
    spec:
      containers:
      - name: ts-assurance-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ticket-office-mongo
spec:
  selector:
    matchLabels:
      app: ts-ticket-office-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ticket-office-mongo
    spec:
      containers:
      - name: ts-ticket-office-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-voucher-mysql
spec:
  selector:
    matchLabels:
      app: ts-voucher-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-voucher-mysql
    spec:
      containers:
      - name: ts-voucher-mysql
        image: mysql:5.6.35
        imagePullPolicy: IfNotPresent
        env:
        # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: root
        ports:
        - containerPort: 3306
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-map-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-map-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-map-mongo
    spec:
      containers:
      - name: ts-food-map-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-mongo
    spec:
      containers:
      - name: ts-consign-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-price-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-price-mongo
    spec:
      containers:
      - name: ts-consign-price-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-mongo
    spec:
      containers:
      - name: ts-food-mongo
        image: mongo
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          requests:
            cpu: 50m
            memory: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  name: ts-user-mongo 
spec:
  ports:
    - port: 27017
  selector:
   app: ts-user-mongo 

---
apiVersion: v1
kind: Service
metadata:
  name: ts-auth-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-auth-mongo
---

apiVersion: v1
kind: Service
metadata:
  name: ts-route-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-route-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-contacts-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-contacts-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-order-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-order-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-order-other-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-order-other-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-config-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-config-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-station-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-station-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-train-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-train-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-travel-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-travel-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-travel2-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-travel2-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-price-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-price-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-security-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-security-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-inside-payment-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-inside-payment-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-payment-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-payment-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-assurance-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-assurance-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-ticket-office-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-ticket-office-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-voucher-mysql
spec:
  ports:
    - port: 3306
  selector:
   app: ts-voucher-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-food-map-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-food-map-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-consign-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-consign-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-consign-price-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-consign-price-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-food-mongo
spec:
  ports:
    - port: 27017
  selector:
   app: ts-food-mongo

---
# Jaeger Deployment and Service.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
spec:
  selector:
    matchLabels:
      app: jaeger
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: all-in-one
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "16686"
    spec:
      containers:
      - env:
        - name: COLLECTOR_ZIPKIN_HTTP_PORT
          value: "9411"
        image: jaegertracing/all-in-one
        name: jaeger
        ports:
          - containerPort: 5775
            protocol: UDP
          - containerPort: 6831
            protocol: UDP
          - containerPort: 6832
            protocol: UDP
          - containerPort: 5778
            protocol: TCP
          - containerPort: 16686
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
        readinessProbe:
          httpGet:
            path: "/"
            port: 14269
          initialDelaySeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
spec:
  type: NodePort
  ports:
    - name: query-http
      port: 16686
      protocol: TCP
      nodePort: 32688
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one

---

apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
spec:
  ports:
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: jaeger
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: agent
spec:
  ports:
    - name: agent-zipkin-thrift
      port: 5775
      protocol: UDP
      targetPort: 5775
    - name: agent-compact
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: agent-binary
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: agent-config
      port: 5778
      protocol: TCP
      targetPort: 5778
  clusterIP: None
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one

---

apiVersion: v1
kind: Service
metadata:
  name: zipkin
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: zipkin
spec:
  ports:
    - name: jaeger-collector-zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
  clusterIP: None
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: all-in-one
